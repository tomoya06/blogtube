-- MySQL Script generated by MySQL Workbench
-- Tue Oct  8 13:53:26 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema blogtube
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `blogtube` ;

-- -----------------------------------------------------
-- Schema blogtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `blogtube` DEFAULT CHARACTER SET utf8 ;
USE `blogtube` ;

-- -----------------------------------------------------
-- Table `blogtube`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`user` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `bio` VARCHAR(255) NULL,
  `role` INT(4) NOT NULL DEFAULT 0 COMMENT 'USER ROLE\n0: USER\n1: ADMIN\n2: BACKEND VIEWER\n',
  `rank` INT(4) NOT NULL DEFAULT 1 COMMENT 'RANK FOR ROLE = USER\nFROM 1 to 12',
  `created_time` DATETIME NOT NULL DEFAULT NOW(),
  `last_login_time` DATETIME NOT NULL DEFAULT NOW(),
  `user_id` VARCHAR(45) NULL,
  `is_banned` TINYINT(1) NOT NULL DEFAULT 0,
  `is_canceled` TINYINT(1) NOT NULL DEFAULT 0,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blogtube`.`channel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`channel` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`channel` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_time` DATETIME NOT NULL DEFAULT NOW(),
  `title` VARCHAR(45) NOT NULL,
  `is_banned` TINYINT(1) NOT NULL DEFAULT 0,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_channel_user1_idx` (`user_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `title_UNIQUE` (`title` ASC),
  CONSTRAINT `fk_channel_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blogtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blogtube`.`article`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`article` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`article` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_time` DATETIME NOT NULL DEFAULT NOW(),
  `title` VARCHAR(255) NOT NULL,
  `content` TEXT NULL,
  `is_banned` TINYINT(1) NULL DEFAULT 0,
  `user_id` INT NOT NULL,
  `channel_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_article_user_idx` (`user_id` ASC),
  INDEX `fk_article_channel1_idx` (`channel_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_article_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `blogtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_article_channel1`
    FOREIGN KEY (`channel_id`)
    REFERENCES `blogtube`.`channel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blogtube`.`tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`tag` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`tag` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `article_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `title_UNIQUE` (`title` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_tag_article1_idx` (`article_id` ASC),
  CONSTRAINT `fk_tag_article1`
    FOREIGN KEY (`article_id`)
    REFERENCES `blogtube`.`article` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blogtube`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`comment` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_time` DATETIME NOT NULL DEFAULT NOW(),
  `title` VARCHAR(45) NOT NULL,
  `content` TEXT NULL,
  `is_banned` TINYINT(1) NOT NULL DEFAULT 0,
  `target` INT(4) NOT NULL DEFAULT 0 COMMENT 'COMMENT TO WHOM?\n0: ARTICLE\n1: COMMENT\n2: CHANNEL',
  `user_id` INT NOT NULL,
  `target_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comment_user1_idx` (`user_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blogtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blogtube`.`vote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`vote` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`vote` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_time` DATETIME NOT NULL DEFAULT NOW(),
  `value` VARCHAR(45) NOT NULL COMMENT 'ACCEPTS UNNICODE FOR EMOJI',
  `user_id` INT NOT NULL,
  `article_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_vote_user1_idx` (`user_id` ASC),
  INDEX `fk_vote_article1_idx` (`article_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_vote_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blogtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vote_article1`
    FOREIGN KEY (`article_id`)
    REFERENCES `blogtube`.`article` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blogtube`.`subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`subscription` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`subscription` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_time` DATETIME NULL DEFAULT NOW(),
  `channel_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_subscription_channel1_idx` (`channel_id` ASC),
  INDEX `fk_subscription_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_subscription_channel1`
    FOREIGN KEY (`channel_id`)
    REFERENCES `blogtube`.`channel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subscription_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blogtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blogtube`.`followship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blogtube`.`followship` ;

CREATE TABLE IF NOT EXISTS `blogtube`.`followship` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_time` DATETIME NOT NULL DEFAULT NOW(),
  `user_id` INT NOT NULL,
  `host_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_followship_user1_idx` (`user_id` ASC),
  INDEX `fk_followship_user2_idx` (`host_id` ASC),
  CONSTRAINT `fk_followship_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blogtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_followship_user2`
    FOREIGN KEY (`host_id`)
    REFERENCES `blogtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
